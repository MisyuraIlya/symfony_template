a:14:{i:0;a:6:{s:4:"type";i:8192;s:7:"message";s:118:"Optional parameter $page declared before required parameter $searchValue is implicitly treated as a required parameter";s:4:"file";s:53:"/var/www/project/src/Repository/ProductRepository.php";s:4:"line";i:51;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:74:"/var/www/project/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:1;a:6:{s:4:"type";i:8192;s:7:"message";s:126:"Optional parameter $itemsPerPage declared before required parameter $searchValue is implicitly treated as a required parameter";s:4:"file";s:53:"/var/www/project/src/Repository/ProductRepository.php";s:4:"line";i:51;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:74:"/var/www/project/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:2;a:6:{s:4:"type";i:8192;s:7:"message";s:121:"Optional parameter $orderBy declared before required parameter $searchValue is implicitly treated as a required parameter";s:4:"file";s:53:"/var/www/project/src/Repository/ProductRepository.php";s:4:"line";i:51;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:74:"/var/www/project/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:3;a:6:{s:4:"type";i:8192;s:7:"message";s:119:"Optional parameter $page declared before required parameter $onlineMigvan is implicitly treated as a required parameter";s:4:"file";s:53:"/var/www/project/src/Repository/ProductRepository.php";s:4:"line";i:110;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:74:"/var/www/project/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:4;a:6:{s:4:"type";i:8192;s:7:"message";s:127:"Optional parameter $itemsPerPage declared before required parameter $onlineMigvan is implicitly treated as a required parameter";s:4:"file";s:53:"/var/www/project/src/Repository/ProductRepository.php";s:4:"line";i:110;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:74:"/var/www/project/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:5;a:6:{s:4:"type";i:8192;s:7:"message";s:122:"Optional parameter $orderBy declared before required parameter $onlineMigvan is implicitly treated as a required parameter";s:4:"file";s:53:"/var/www/project/src/Repository/ProductRepository.php";s:4:"line";i:110;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:74:"/var/www/project/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:6;a:6:{s:4:"type";i:16384;s:7:"message";s:174:"Class "App\Serializer\MediaObjectNormalizer" should implement method "Symfony\Component\Serializer\Normalizer\NormalizerInterface::getSupportedTypes(?string $format): array".";s:4:"file";s:66:"/var/www/project/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:74:"/var/www/project/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:7;a:6:{s:4:"type";i:16384;s:7:"message";s:268:"Method "ApiPlatform\State\ProcessorInterface::process()" might add "T" as a native return type declaration in the future. Do the same in implementation "App\State\PdfDocumentProcessor" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:66:"/var/www/project/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:74:"/var/www/project/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:8;a:6:{s:4:"type";i:16384;s:7:"message";s:266:"Method "ApiPlatform\State\ProcessorInterface::process()" might add "T" as a native return type declaration in the future. Do the same in implementation "App\State\SendOrderProcessor" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:66:"/var/www/project/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:74:"/var/www/project/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:9;a:6:{s:4:"type";i:16384;s:7:"message";s:267:"Method "ApiPlatform\State\ProcessorInterface::process()" might add "T" as a native return type declaration in the future. Do the same in implementation "App\State\XlDocumentProcessor" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:66:"/var/www/project/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:74:"/var/www/project/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:10;a:6:{s:4:"type";i:16384;s:7:"message";s:297:"Method "Symfony\Component\Validator\ConstraintValidatorInterface::validate()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Validator\IsValidOrderValidator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:66:"/var/www/project/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:74:"/var/www/project/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:11;a:6:{s:4:"type";i:16384;s:7:"message";s:105:"Since symfony/security-bundle 6.2: The "enable_authenticator_manager" option at "security" is deprecated.";s:4:"file";s:63:"/var/www/project/vendor/symfony/config/Definition/ArrayNode.php";s:4:"line";i:248;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:62:"/var/www/project/vendor/symfony/config/Definition/BaseNode.php";s:4:"line";i:421;s:8:"function";s:13:"finalizeValue";s:5:"class";s:45:"Symfony\Component\Config\Definition\ArrayNode";s:4:"type";s:2:"->";}}s:5:"count";i:2;}i:12;a:6:{s:4:"type";i:16384;s:7:"message";s:287:"Since lexik/jwt-authentication-bundle 2.16: The "lexik_jwt_authentication.user_identity_field" configuration key is deprecated since version 2.16, use "lexik_jwt_authentication.user_id_claim" or implement "Symfony\Component\Security\Core\User\UserInterface::getUserIdentifier()" instead.";s:4:"file";s:63:"/var/www/project/vendor/symfony/config/Definition/ArrayNode.php";s:4:"line";i:248;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:62:"/var/www/project/vendor/symfony/config/Definition/BaseNode.php";s:4:"line";i:421;s:8:"function";s:13:"finalizeValue";s:5:"class";s:45:"Symfony\Component\Config\Definition\ArrayNode";s:4:"type";s:2:"->";}}s:5:"count";i:2;}i:13;a:6:{s:4:"type";i:16384;s:7:"message";s:203:"Since gesdinet/jwt-refresh-token-bundle 1.0: The "Gesdinet\JWTRefreshTokenBundle\Entity\AbstractRefreshToken" class is deprecated, use "Gesdinet\JWTRefreshTokenBundle\Model\AbstractRefreshToken" instead.";s:4:"file";s:89:"/var/www/project/vendor/gesdinet/jwt-refresh-token-bundle/Entity/AbstractRefreshToken.php";s:4:"line";i:16;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:96:"/var/www/project/vendor/api-platform/core/src/Metadata/Util/ReflectionClassRecursiveIterator.php";s:4:"line";i:49;s:4:"args";a:1:{i:0;s:89:"/var/www/project/vendor/gesdinet/jwt-refresh-token-bundle/Entity/AbstractRefreshToken.php";}s:8:"function";s:12:"require_once";}}s:5:"count";i:1;}}